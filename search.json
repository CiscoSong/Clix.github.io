[{"categories":["谷城"],"content":"输出输入  输出  print()\n 输入  input()\ninput()本身也有输出的功能，如果括号里什么都不写，就不会输出。在输出最后会要求用户输入，并将输入的内容保存起来。\n变量和它的定义 格式 变量名 = 变量值\nvariable = value\n变量类型  整数 Integer: int 小数 Decimal: float 字符串 String: str 字母 Character: chr 布尔值 Boolean: bool True False  字母 Character 任何一个字母都可以和数字一一对应，参考ASCII表格\n布尔值 Boolean 1️⃣ 是 True\n0️⃣ 是 False\n不同变量类型之间的强制转换 变量类型(variable)\n1 2  a = 66 print(chr(a)) # print('B')   1 2  a = 3 b = float(a) # b = 3.0   if 格式 1 2 3 4 5 6  if 条件: do something here elif 条件: do something here else: do something here   1 2 3 4 5 6 7 8  a = 0 if a \u003e 0: print(\"bigger\") elif a \u003c 0: print(\"smaller\") else: print(\"a = 0\")   关于print()和字符串的一些奇技淫巧 字符串 + 字符串 1 2 3  a = \"t\" b = \"h\" print(a + b) # th   1 2 3  a = \"9\" b = \"8\" print(a + b) # 98     注意：字符串只能加字符串，不能加其他任何类型的变量，否则会报错。\n1 2 3  a = \"6\" b = 8 print(a + b) # 报错 不能这样写     字符串 * 整数 1 2 3  a = \"apple\" b = 2 print(a * b) # appleapple     注意：字符串只能乘整数，不能乘小数，否则会报错\n  除了加和乘以外，字符串不能接-和/，否则会报错\n  print()结尾的神奇操作   sep = \n将print()括号中的每一项，中间加入设定的部分。默认为空格。\n1 2 3  a = \"5\" b = 8 print(a, b, \"u\", \"p\", sep = \"--\") # 5--8--u--p     end = \n在print()的最后加入设定的部分。默认为\\n。\n  file =\n输出到指定文件。几乎不用，python具有相同作用下，更方便的高级写法。\n  转义字符 Escape Character 一定要在字符串中使用\n本身是反斜杠：\\\n\\n 换行\n\\t tab（制表符）\n\\\" \"（双引号）\n\\' '（单引号）\n\\\\ \\ (反斜杠)\n","description":"","tags":["Python"],"title":"Python基础","uri":"/posts/python-gorden/"},{"categories":["Plan"],"content":" Java安装与环境变量的配置 Python安装与环境变量的配置 「Visual Studio Code」安装与环境变量的配置 「Jupyter Lab」安装与环境变量的配置 在「Jupyter Lab」中加入Java  ","description":"2020年12月发布规划","tags":[],"title":"Plan 2020 December","uri":"/posts/plan-2020-12/"},{"categories":[],"content":" 2019年3月6日\n   机缘巧合发现了三水非冰的博客。1\n  简约的界面和浅绿的配色让我非常喜欢。网站最吸引我的还是圆角包边的代码块设计code。对「Markdown」一无所知的我，简直像发现了新大陆一样激动。但是使用Hexo建站比我想象中的要困难许多，甚至想过说声再见将「Node.js」和「Git」统统卸载掉。由于我对git的陌生，我建站最困难的部分在于如何将网站部署到GitHub。好在经过两个周末的不断尝试，我的博客「Clix」建成了。\n    2019年3月16日\n   Clix上线！✨\n  厌倦了QQ空间的我，此时最想庆祝的是可以摆脱QQ空间的黄钻特权。拥有一个域名和一个可以随心所欲设计的网站，是一件令人幸福感倍增的事。😃\n    2019年5月至2019年11月\n   我和Hexo的蜜月期比我想的要短的多💔。五月以后我就基本上再也没有打开过Clix，也没有更新过博客内容了。主要原因有二：\n1️⃣「NexT」主题非常棒，遗憾的是没有暗色主题🌚，对CSS和JS基本上一窍不通的我也不可能自己写出一个暗色主题。2\n2️⃣我放弃Hexo最主要的原因是我打开博客平均需要花费30秒以上。我也尝试阅读过各种给Hexo博客加速的文章，但是更高级的技术框架光是看看就把我劝退了。再加上大一工程系的课，诚可谓是扑朔迷离，让我非常头疼，所以博客的优化也就一拖再拖。\n    2019年11月2日\n   由于之前遇到的问题还是没有可行的解决方案，Clix在我的GitHub库中竟成了一个鸡肋的存在：删库舍不得，优化没希望，看到就烦。以至于一度放弃博客，任它自生自灭。直到我第一次看到reuixiy的博客，让我对Clix的建设又充满了信心。\n  reuixiy的博客让我了解到一个新的博客框架「Hugo」，与Hexo相比，Hugo更加简洁高效3，网站的访问速度也提高了很多。特别是reuixiy写的主题「MemE」让我爱不释手。\n  初次尝试Hugo给我的经历也很不美好，scss文件无法编译的问题让我百思不得其解，最后reuixiy在我发布的GitHub Issues中指出我安装的并不是Hugo的extended version，这也一度让我觉得提交这个issue十分尴尬。😅\n    2019年12月至2020年12月\n  经过第一次调试失败以后，我就彻底失去了安装Hugo和继续搭建Clix的热情，这一年的时间里，我甚至连本地的博客文件夹都没有再打开过。博客的建设对我来说太复杂，大学的生活又太浮躁。上课，打工，打游戏成为了生活的基本节奏。重建博客的想法萌发于大二的上学期，也就是2020年9月之后。我开始在网上手把手教学一些基础的Java和Python，这样的经历，让我非常希望有一个快速响应的网站可以把笔记和代码分享出去。碍于上课期间实在是没有时间，也就迟迟没有动手。    2020年12月10日\n   「Clix 2.0」正式上线！😎\n  从12月4日放假以来，整整一周的奋斗之后，Clix 2.0终于上线啦。这一周的过程也十分坎坷，最大的问题在于将主页改成GitHub Universe的风格以后，在所有的苹果设备上都无法显示，这个问题一度让我想要放弃MemE主题。最后将background-image从div标签改成p标签后，渲染的范围变小，在苹果设备上就能正常显示了！🎉\n  在Clix 2.0的建设中，学习reuixiy的博客让我有了很多成长，对前端也有了一定的认知。不过以我现在的技术水平，对于前端的设计也只会抄抄改改，非常佩服reuixiy凭一己之力创作出了MemE主题。对于Clix而言，一个静态博客，没有主机，没有框架，也没有数据库，似乎就剩下了前端。💡\n    当时三水非冰还是cn的域名，用的是「GitHub Pages + Hexo」的框架。 ↩︎\n NexT主题在7.7.2版本中加入了原生的暗色主题支持，该版本发布于2020年3月1日。 ↩︎\n reuixiy写过一篇文章详细对比了Hexo和Hugo：Hugo 与 Hexo 的异同。 ↩︎\n   ","description":"Clix建站的启发，部署和一路坎坷的艰辛历程。Clix 2.0正式上线！","tags":[],"title":"About","uri":"/about/"}]
